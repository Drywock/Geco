---
title: FAQ
sort_info: 6
in_menu: true
---

# FAQ

## La lecture des puces SPORTident est anormalement lente
Des utilisateurs ont reporté des temps de lecture des puces très longs sur certains ordinateurs. Dans ces cas la lecture d'une seule prend environ 10 secondes au lieu des 1 à 2 secondes habituelles, ce qui rend Geco impraticable en compétition. Le problème semble apparaître uniquement quand le boîtier maître SPORTident est branché directement sur l'ordinateur. Bien que la cause du problème soit encore inconnue, il est possible de le résoudre en branchant un hub USB entre l'ordinateur et le boîtier maître. Une configuration typique de GEC est l'utilisation du hub pour le boîtier maître et l'imprimante à ticket, tandis que les autres ports USB sont libres de recevoir une imprimante normale ou des clés USB.


## Certains temps sont décalés de 12h00 avec les puces SI 5
Les temps dans les puces SI 5 sont enregistrés sur 12h00 et repartent ensuite à zéro. Geco doit recalculer le temps correct à partir de l'heure zéro de la compétition.

1. Changer l'heure zéro pour une heure proche de l'heure réelle de la compétition dans la [configuration](../guide/stage.fr.html).
1. Pour les coureurs concernés, *réinitialiser le temps officiel* à partir de la [vue des données coureur](../guide/runners.fr.html).


## \[Windows\] Temps de démarrage lent (avec Bluetooth activé)
Geco scanne les ports série au démarrage pour détecter une station SPORTident. Si Bluetooth est activé, il sera aussi scanné ce qui ralentit considérablement le lancement de Geco (plus de 10 secondes d'attente). Vous pouvez soit :

- désactiver Bluetooth avant de lancer Geco
- ou lancer Geco depuis la ligne de commande avec par exemple  
`java -Dgnu.io.rxtx.SerialPorts=COM1;COM3 -jar gecoXXXX.jar`  
où `COM1` et `COM3` sont les ports susceptibles d'accueillir votre station SPORTident (à adapter suivant votre configuration). Vous pouvez créer un fichier batch pour éviter de taper cette commande à chaque fois.


## \[Mac OS X\] Comment installer un pilote pour SPORTident ?

*Guy P. a écrit un [tutorial détaillé et pas à pas](http://sdenier.github.com/Geco/procedure_installation_driver_sportident.pdf) si vous n'êtes pas habitué aux manipulations systèmes décrites ci-dessous.*

Il faut télécharger le pilote Mac OS pour le chip USB des boîtiers SPORTident, puis changer quelques informations du pilote pour que Mac OS le reconnaisse pour le boîtier.

1\. Télécharger et installer le pilote depuis [SI labs](https://www.silabs.com/products/interface/usbtouart/Pages/usb-to-uart-bridge.aspx), section *Tools*, sélectionner *CP210x VCP Mac OSX Drivers* (ou essayer le lien direct [Mac\_OSX\_VCP\_Driver.zip](https://www.silabs.com/pages/DownloadDoc.aspx?FILEURL=Support%20Documents/Software/Mac_OSX_VCP_Driver.zip&src=SoftwardDownloadsWebPart)). L'installation demande un redémarrage.

Deux pilotes sont installés, une version 32 bits `/System/Library/Extensions/CP210xVCPDriver.kext` et une version 64 bits `/System/Library/Extensions/CP210xVCPDriver64.kext`. Vous pouvez modifier l'un ou l'autre des pilotes. Le tutorial continue avec la version 64 bits.

2\. Ouvrir le fichier `/System/Library/Extensions/CP210xVCPDriver64.kext/Contents/Info.plist` avec un éditeur de texte (il vous faut les droits admin). Vous pouvez faire une copie de sauvegarde avant édition.

Dans le fichier, repérer les deux lignes suivantes en cherchant la chaîne 60000 :

<pre>
&lt;key&gt;idProduct&lt;/key&gt;
&lt;integer&gt;60000&lt;/integer&gt;
</pre>

Remplacer 60000 par **32778** (identifiant des boîtiers SPORTident).

<pre>
&lt;key&gt;idProduct&lt;/key&gt;
&lt;integer&gt;32778&lt;/integer&gt;
</pre>

3\. *Uniquement sous Lion (Mac OSX 10.7)*, il faut mettre à jour le cache pour que le chargement du pilote soit automatique au branchement du boîtier. Les deux dernières commandes prennent un peu de temps.

<pre>
sudo kextload -b com.silabs.driver.CP210xVCPDriver64
sudo kextcache -system-prelinked-kernel
sudo kextcache -system-caches
</pre>

4\. Redémarrer à nouveau pour vérifier que le système prenne en compte les modifications.

Le boîtier apparaît sous l'identifiant **/dev/tty.SLAB\_USBtoUART** dans Geco (et aussi comme **SPORTident USB to UART Bridge Controller** dans le profil système).


## Geco lit un mauvais code quand le code d'une station est supérieur à 255
C'est une limite actuelle de Geco. Si une station est reprogrammée avec un code supérieur à 255, Geco peut toujours lire le poinçon de la puce mais affectera le code de la station modulo 255 (le reste de la division entière par 255). Par exemple :

- 300 modulo 255 donne 45
- 600 modulo 255 donne 90 (soit encore, 255 * 2 + 90 = 600)

Pour éviter les risques de confusion, il n'est pas recommandé de dépasser cette limite avec Geco. Si vous voulez quand même utiliser des codes supérieurs à 255, il faut éditer chaque circuit pour remplacer les codes > 255 par leur modulo.
